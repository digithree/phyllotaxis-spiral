/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package phyllotaxisspiral;

import com.leapmotion.leap.Controller;

/**
 *
 * @author simonkenny
 */
public class PhyJFrame extends javax.swing.JFrame {
    private final ProcessingApplet aApplet;
    
    private final float RADIUS_MIN = 0.5f;
    private final float RADIUS_MAX = 100.f;
    private final float RADIUS_INC_MIN = 0.01f;
    private final float RADIUS_INC_MAX = 3.f;
    private final float ANGLE_MIN = 0.001f;
    private final float ANGLE_MAX = 3.14f;
    private final float ANGLE_INC_MIN = 0.001f;
    private final float ANGLE_INC_MAX = 3.14f / 10.f;
    
    private final Controller controller;
    private final LeapListener listener;
    
    /**
     * Creates new form PhyJFrame
     */
    public PhyJFrame() {
        initComponents();
        aApplet = new ProcessingApplet();
        jPanelProcessing.add(aApplet);
        aApplet.init();
        controller = new Controller();
        listener = new LeapListener(this);
        controller.addListener(listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelProcessing = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSliderRadiusStart = new javax.swing.JSlider();
        jSliderRadiusInc = new javax.swing.JSlider();
        jSliderAngleStart = new javax.swing.JSlider();
        jSliderAngleInc = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxColour = new javax.swing.JCheckBox();
        jCheckBoxEntropy = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jSliderEntropy = new javax.swing.JSlider();
        jCheckBoxBg = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jSliderScreenBlur = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelProcessing.setBackground(new java.awt.Color(255, 255, 255));
        jPanelProcessing.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelProcessing.setPreferredSize(new java.awt.Dimension(715, 402));

        javax.swing.GroupLayout jPanelProcessingLayout = new javax.swing.GroupLayout(jPanelProcessing);
        jPanelProcessing.setLayout(jPanelProcessingLayout);
        jPanelProcessingLayout.setHorizontalGroup(
            jPanelProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 713, Short.MAX_VALUE)
        );
        jPanelProcessingLayout.setVerticalGroup(
            jPanelProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jLabel1.setText("Radius start");

        jSliderRadiusStart.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRadiusStartStateChanged(evt);
            }
        });

        jSliderRadiusInc.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRadiusIncStateChanged(evt);
            }
        });

        jSliderAngleStart.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAngleStartStateChanged(evt);
            }
        });

        jSliderAngleInc.setMaximum(1000);
        jSliderAngleInc.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAngleIncStateChanged(evt);
            }
        });

        jLabel2.setText("Radius inc");

        jLabel3.setText("Angle start");

        jLabel4.setText("Angle inc");

        jCheckBoxColour.setSelected(true);
        jCheckBoxColour.setText("Dots are coloured");
        jCheckBoxColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxColourActionPerformed(evt);
            }
        });

        jCheckBoxEntropy.setSelected(true);
        jCheckBoxEntropy.setActionCommand("Dot entropy on");
        jCheckBoxEntropy.setLabel("Dot entropy on");
        jCheckBoxEntropy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEntropyActionPerformed(evt);
            }
        });

        jLabel5.setText("Entropy");

        jSliderEntropy.setMaximum(1000);
        jSliderEntropy.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderEntropyStateChanged(evt);
            }
        });

        jCheckBoxBg.setSelected(true);
        jCheckBoxBg.setLabel("Background black / white");
        jCheckBoxBg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBgActionPerformed(evt);
            }
        });

        jLabel6.setText("Screen blur");

        jSliderScreenBlur.setMaximum(1000);
        jSliderScreenBlur.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderScreenBlurStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSliderRadiusInc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSliderRadiusStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSliderAngleStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSliderAngleInc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSliderEntropy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSliderScreenBlur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBoxColour)
                                .addGap(39, 39, 39)
                                .addComponent(jCheckBoxEntropy)
                                .addGap(30, 30, 30)
                                .addComponent(jCheckBoxBg)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jSliderRadiusStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderRadiusInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderAngleStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jSliderAngleInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jSliderEntropy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jSliderScreenBlur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxColour)
                    .addComponent(jCheckBoxEntropy)
                    .addComponent(jCheckBoxBg))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderRadiusStartStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRadiusStartStateChanged
        aApplet.setRadius(rescaleVal(jSliderRadiusStart.getValue(),0.f,100.f,RADIUS_MIN,RADIUS_MAX));
        aApplet.redraw();
    }//GEN-LAST:event_jSliderRadiusStartStateChanged

    private void jSliderRadiusIncStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRadiusIncStateChanged
        aApplet.setRadiusInc(rescaleVal(jSliderRadiusInc.getValue(),0.f,100.f,RADIUS_INC_MIN,RADIUS_INC_MAX));
        aApplet.redraw();
    }//GEN-LAST:event_jSliderRadiusIncStateChanged

    private void jSliderAngleStartStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAngleStartStateChanged
        aApplet.setAngle(rescaleVal(jSliderAngleStart.getValue(),0.f,100.f,ANGLE_MIN,ANGLE_MAX));
        aApplet.redraw();
    }//GEN-LAST:event_jSliderAngleStartStateChanged

    private void jSliderAngleIncStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAngleIncStateChanged
        aApplet.setAngleInc(rescaleVal(jSliderAngleInc.getValue(),0.f,1000.f,ANGLE_INC_MIN,ANGLE_INC_MAX));
        aApplet.redraw();
    }//GEN-LAST:event_jSliderAngleIncStateChanged

    private void jCheckBoxColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxColourActionPerformed
        aApplet.setUseCol(jCheckBoxColour.isSelected());
        aApplet.redraw();
    }//GEN-LAST:event_jCheckBoxColourActionPerformed

    private void jCheckBoxEntropyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEntropyActionPerformed
        aApplet.setEntropyState(jCheckBoxEntropy.isSelected());
        aApplet.redraw();
    }//GEN-LAST:event_jCheckBoxEntropyActionPerformed

    private void jSliderEntropyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderEntropyStateChanged
        // entropy
        aApplet.setEntropy(rescaleVal(jSliderEntropy.getValue(),0.f,100.f,0.f,1.f));
        aApplet.redraw();
    }//GEN-LAST:event_jSliderEntropyStateChanged

    private void jCheckBoxBgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBgActionPerformed
        aApplet.setBackgroundBlackOrWhite(jCheckBoxBg.isSelected());
        aApplet.redraw();
    }//GEN-LAST:event_jCheckBoxBgActionPerformed

    private void jSliderScreenBlurStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderScreenBlurStateChanged
        aApplet.setScreenBlur(rescaleVal(jSliderScreenBlur.getValue(),0.f,100.f,0.f,0.1f));
        aApplet.redraw();
    }//GEN-LAST:event_jSliderScreenBlurStateChanged

    private float rescaleVal(float val, float origMin, float origMax, float newMin, float newMax) {
        return (((val-origMin)/(origMax-origMin)) * (newMax-newMin)) + newMin;
    }
    
    public void externalChange( int type, float val ) {
        switch( type ) { 
            case 0:
                aApplet.setRadius(rescaleVal(val,0.f,1.f,RADIUS_MIN,RADIUS_MAX));
                break;
            case 1:
                aApplet.setRadiusInc(rescaleVal(val*val,0.f,1.f,RADIUS_INC_MIN,RADIUS_INC_MAX));
                break;
            case 2:
                aApplet.setAngle(rescaleVal(val,0.f,1.f,ANGLE_MIN,ANGLE_MAX));
                break;
            case 3:
                aApplet.setAngleInc(rescaleVal(val,0.f,1.f,ANGLE_INC_MIN,ANGLE_INC_MAX));
                break;
        }
        aApplet.redraw();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhyJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxBg;
    private javax.swing.JCheckBox jCheckBoxColour;
    private javax.swing.JCheckBox jCheckBoxEntropy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanelProcessing;
    private javax.swing.JSlider jSliderAngleInc;
    private javax.swing.JSlider jSliderAngleStart;
    private javax.swing.JSlider jSliderEntropy;
    private javax.swing.JSlider jSliderRadiusInc;
    private javax.swing.JSlider jSliderRadiusStart;
    private javax.swing.JSlider jSliderScreenBlur;
    // End of variables declaration//GEN-END:variables
}
